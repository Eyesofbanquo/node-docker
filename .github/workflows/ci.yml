# This is a basic workflow to help you get started with Actions

name: Pull Request Flow

# Controls when the action will run.
on:
  pull_request:
    branches: [master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
      POSTGRES_USER: ${{secrets.POSTGRES_USER}}
      JWT_SECRET: ${{secrets.JWT_SECRET}}
      JWT_REFRESH_SECRET: ${{secrets.JWT_REFRESH_SECRET}}
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      TEST_ACCESS_TOKEN: ${{secrets.TEST_ACCESS_TOKEN}}
      TEST_REFRESH_TOKEN: ${{secrets.TEST_REFRESH_TOKEN}}

    steps:
      - uses: actions/checkout@v2

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@adb73476b6e06caddec5db0bc1deacbec8cdd947
        uses: docker/login-action@v1.6.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKER_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Log out from the Docker registry at the end of a job
          logout: true

      - name: Fetch dependencies
        run: npm install ts-node && npm ci --also=dev

      #- name: Build & Run Tests
      #  run: docker-compose -f docker-compose.ci.yml --project-name ${{secrets.DOCKER_CI_PROJECT_NAME}} up --exit-code-from web

      - name: Run Danger
        run: npm run danger:ci:pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
